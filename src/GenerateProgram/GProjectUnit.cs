using System;
using System.Collections.Generic;
using System.Text;
using ATAP.Utilities.Philote;

namespace GenerateProgram {
  public class GProjectUnit {
    public GProjectUnit(string gName, string gRelativePath=default, string gFileSuffix=default,
    Dictionary<Philote<GPropertyGroupInProjectUnit>, GPropertyGroupInProjectUnit> gPropertyGroupInProjectUnits = default,
    Dictionary<Philote<GItemGroupInProjectUnit>, GItemGroupInProjectUnit> gItemGroupInProjectUnits = default,
    Dictionary<Philote<GResourceUnit>, GResourceUnit> gResourceUnits  = default

    ){
      GName = gName ?? throw new ArgumentNullException(nameof(gName));
      GRelativePath = gRelativePath == default ? "" : gRelativePath;
      GFileSuffix = gFileSuffix == default ? ".csproj" : gFileSuffix;
      GPropertyGroupInProjectUnits = gPropertyGroupInProjectUnits == default ? new Dictionary<Philote<GPropertyGroupInProjectUnit>, GPropertyGroupInProjectUnit>() : gPropertyGroupInProjectUnits;
      GItemGroupInProjectUnits = gItemGroupInProjectUnits == default ? new Dictionary<Philote<GItemGroupInProjectUnit>, GItemGroupInProjectUnit>() : gItemGroupInProjectUnits;
      GResourceUnits = gResourceUnits == default ? new Dictionary<Philote<GResourceUnit>, GResourceUnit>() : gResourceUnits;
      Philote = new Philote<GProjectUnit>();
    }

    public string GName { get; }
    public string GRelativePath { get; }
    public string GFileSuffix { get; }
    public Dictionary<Philote<GResourceUnit>, GResourceUnit> GResourceUnits { get; }
    public Dictionary<Philote<GPropertyGroupInProjectUnit>, GPropertyGroupInProjectUnit> GPropertyGroupInProjectUnits { get; }
    public Dictionary<Philote<GItemGroupInProjectUnit>, GItemGroupInProjectUnit> GItemGroupInProjectUnits { get; }
    public Philote<GProjectUnit> Philote { get; }
    public static string Header { get; } = "<!--" +  StringConstants.AutoGeneratedHeaderCommentTextStringDefault + " -->";
  }
}

