{
  "name": "atap-aiassist",
  "displayName": "atap-aiassist",
  "description": "AI code helper",
  "publisher": "ataputilities",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.83.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./_generated/dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "atap-aiassist.startCommand",
        "title": "ATAP-AiAssist: startCommand"
      },
      {
        "command": "atap-aiassist.showVSCEnvironment",
        "icon": "$(rocket)",
        "title": "ATAP-AiAssist: showVSCEnvironment"
      },
      {
        "command": "atap-aiassist.showQuickPickExample",
        "title": "ATAP-AiAssist: Show Quick Pick"
      },
      {
        "command": "atap-aiassist.quickPickFromSettings",
        "title": "ATAP-AiAssist: Quick Pick (categorys)"
      },
      {
        "command": "atap-aiassist.showMainViewRootRecordProperties",
        "title": "ATAP-AiAssist: Show Root Record (Main View) Properties"
      },
      {
        "command": "atap-aiassist.showSubItemProperties",
        "title": "ATAP-AiAssist: Show SubItem Properties"
      },
      {
        "command": "atap-aiassist.removeRegion",
        "title": "ATAP-AiAssist: Remove lines starting with #region  and #endregion"
      },
      {
        "command": "atap-aiassist.processFiles",
        "title": "ATAP-AiAssist: process a file selector over a lambda",
        "description": "process a list of files (parameter) by applying a lambda (parameter). Also accepts an optional ILogger parameter. Returns a list of structures consisting of filename, boolean success and number length",
        "when": "focusedView == atap-aiassistMainTreeView"
      },
      {
        "command": "atap-aiassist.copyToSubmit",
        "title": "ATAP-AiAssist: copyToSubmit"
      },
      {
        "command": "atap-aiassist.showExplorerView",
        "title": "ATAP-AiAssist: Show Explorer View"
      }
    ],
    "keybindings": [
      {
        "command": "atap-aiassist.processFiles",
        "key": "ctrl+l ctrl+p",
        "when": "focusedView == atap-aiassistMainTreeView"
      }
    ],
    "configuration": [
      {
        "title": "ATAP-AiAssist",
        "properties": {
          "ATAP-AiAssist.Logger.LogLevel": {
            "type": "string",
            "default": "Info",
            "enum": [
              "Error",
              "Warning",
              "Info",
              "Debug",
              "Trace"
            ],
            "description": "Log level setting."
          },
          "ATAP-AiAssist.ChatGPT.APIKey": {
            "type": "string",
            "default": "Enter your ChatGPT API Key",
            "description": "ChatGPT API Key."
          },
          "ATAP-AiAssist.categorys": {
            "type": "string",
            "default": "[\"code\", \"documentation\",\"testing\"]",
            "description": "Serialized Categories instance."
          },
          "ATAP-AiAssist.tags": {
            "type": "string",
            "default": "{}",
            "description": "Serialized Tags instance."
          },
          "ATAP-AiAssist.predicates": {
            "type": "string",
            "default": "{}",
            "description": "Serialized Predicates instance."
          },
          "ATAP-AiAssist.Development.Logger.LogLevel": {
            "type": "string",
            "default": "Info",
            "enum": [
              "Error",
              "Warning",
              "Info",
              "Debug",
              "Trace"
            ],
            "description": "Log level setting when the extension is run inside the development host."
          },
          "ATAP-AiAssist.Development.Editor.FilePath": {
            "type": "string",
            "default": "TestData1.ps1",
            "description": "The file to open in an editor when the extension is run inside the development host."
          },
          "ATAP-AiAssist.Development.WorkspacePath": {
            "type": "string",
            "default": "./",
            "description": "The workspace to open when the extension is run inside the development host."
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "atap-aiassist-activitybar-viewsContainer",
          "title": "ATAP-AiAssist",
          "icon": "media/ataplogo.svg"
        }
      ]
    },
    "views": {
      "atap-aiassist-activitybar-viewsContainer": [
        {
          "id": "atap-aiassistMainTreeView",
          "name": "Main Tree View"
        },
        {
          "id": "atap-aiassistFileTreeView",
          "name": "Specialized File Tree View"
        }
      ],
      "explorer": [
        {
          "id": "atap-aiassistWelcomeView",
          "name": "ATAP"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "atap-aiassistWelcomeView",
        "contents": "Welcome to the ATAP AiAssist extension!\n[Start here](command:atap-aiassist.startCommand)",
        "commands": [
          {
            "command": "ATAP-AiAssist.ChatGPT.AIKey",
            "title": "Enter ChatGPT API Key",
            "when": "ATAP-AiAssist.ChatGPT.AIKey == ''"
          }
        ],
        "//": "group: atap-aiassist@1",
        "priority": 1
      }
    ]
  },
  "menus": {
    "view/item/context": [
      {
        "command": "atap-aiassist.showMainViewRootRecordProperties",
        "when": "view == atap-aiassistMainTreeView && viewItem == mainViewTreeItem"
      }
    ],
    "view/title": [
      {
        "when": "view == atap-aiassistMainTreeView",
        "group": "navigation",
        "tooltip": "Show workspace and initial editor filename",
        "command": "atap-aiassist.showVSCEnvironment"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack --output-path=./_generated/dist/",
    "watch": "webpack --watch --output-path=./_generated/dist/",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir ./_generated/out/",
    "watch-tests": "tsc -p . -w --outDir ./_generated/out/",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./_generated/out/test/runTest.js"
  },
  "devDependencies": {
    "@types/chai": "^4.3.9",
    "@types/mocha": "^10.0.3",
    "@types/node": "^18.18.8",
    "@types/vscode": "^1.83.0",
    "@typescript-eslint/eslint-plugin": "^6.7.3",
    "@typescript-eslint/parser": "^6.9.1",
    "@vscode/test-electron": "^2.3.4",
    "chai": "^4.3.10",
    "eslint": "^8.50.0",
    "glob": "^10.3.3",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.4",
    "typescript": "^5.2.2",
    "webpack": "^5.88.2",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@types/axios": "^0.14.0",
    "@types/js-yaml": "^4.0.8",
    "axios": "^1.6.0",
    "js-yaml": "^4.1.0"
  }
}
