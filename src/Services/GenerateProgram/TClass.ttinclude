<#@ include file="TPropertyGroups.ttinclude" once="true" #>
<#@ include file="TConstructor.ttinclude" once="true" #>
<#+ // Start of GenerateClass feature control block.
string GenerateClass(GClass cla)
{
  var FirstLine = new StringBuilder();
  FirstLine.Append(cla.GVisibility);
  FirstLine.Append(" class ");
  FirstLine.Append( cla.GName );
  if (cla.GInheritence!=null || (cla.GImplements!=null && cla.GImplements.Count >0)) {FirstLine.Append( ":" );}
  if (cla.GInheritence!=null  && (cla.GImplements==null || cla.GImplements.Count ==0)) {FirstLine.Append( cla.GInheritence );}
  else if (cla.GInheritence==null || (cla.GImplements!=null && cla.GImplements.Count >0)){FirstLine.Append( String.Join(","cla.GImplements) );}
  else if (cla.GInheritence!=null || (cla.GImplements!=null && cla.GImplements.Count >0)){FirstLine.Append( cla.GInheritence );FirstLine.Append(",")FirstLine.Append( String.Join(","cla.GImplements) );}
  FirstLine.Append( "{" ); #>
  <#= FirstLine.ToString() #>
  <#+ if (cla.GPropertyGroups != null && cla.GPropertyGroups.Count > 0) { #>
    #region Properties
    <#+ foreach (var pg in cla.GPropertyGroups) { #>
    <#= GeneratePropertyGroups(pg) #>
    <#+ } #>
    #endregion
  <#+ } #>
  <#= GenerateConstructor(cla.GConstructor) #>
<#+ } // End of GenerateClass feature control block.#>
