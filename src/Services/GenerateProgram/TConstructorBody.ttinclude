<#+ // Start of feature control block.
string GenerateConstructorBody(GConstructorBody cb)
{ #>

      this.StringLocalizerFactory = stringLocalizerFactory ?? throw new ArgumentNullException(nameof(stringLocalizerFactory));
      exceptionLocalizer = stringLocalizerFactory.Create(nameof(AService01.Resources), "AService01");
      debugLocalizer = stringLocalizerFactory.Create(nameof(AService01.Resources), "AService01");
      uiLocalizer = stringLocalizerFactory.Create(nameof(AService01.Resources), "AService01");
      this.LoggerFactory = loggerFactory ?? throw new ArgumentNullException(nameof(loggerFactory));
      this.logger = loggerFactory.CreateLogger<StdInHandlerService>();
      // this.logger = (Logger<AService01StdInHandlerService>) ATAP.Utilities.Logging.LogProvider.GetLogger("AService01StdInHandlerService");
      logger.LogDebug("StdInHandlerService", ".ctor");  // ToDo Fody for tracing constructors, via an optional switch
      this.HostEnvironment = hostEnvironment ?? throw new ArgumentNullException(nameof(hostEnvironment));
      this.HostConfiguration = hostConfiguration ?? throw new ArgumentNullException(nameof(hostConfiguration));
      this.HostLifetime = hostLifetime ?? throw new ArgumentNullException(nameof(hostLifetime));
      this.appConfiguration = appConfiguration ?? throw new ArgumentNullException(nameof(appConfiguration));
      this.HostApplicationLifetime = hostApplicationLifetime ?? throw new ArgumentNullException(nameof(hostApplicationLifetime));
      this.FileSystemGraphToDBService = fileSystemGraphToDBService ?? throw new ArgumentNullException(nameof(fileSystemGraphToDBService));
      this.FileSystemToObjectGraphService = fileSystemToObjectGraphService ?? throw new ArgumentNullException(nameof(fileSystemToObjectGraphService));
      this.consoleSinkHostedService = consoleSinkHostedService ?? throw new ArgumentNullException(nameof(consoleSinkHostedService));
      this.consoleSourceHostedService = consoleSourceHostedService ?? throw new ArgumentNullException(nameof(consoleSourceHostedService));
      //internalCancellationToken = internalCancellationTokenSource.Token;
      Stopwatch = new Stopwatch();
      #region Create the serviceData and initialize it from the StringConstants or this service's ConfigRoot
      this.serviceData = new StdInHandlerServiceData(
        // ToDo: Get the list from the StringConstants, and localize them 
        choices: new List<string>() { "1. Run FileSystemToObjectGraphAsyncTask", "2. Run FileSystemGraphToDBAsyncTask", "99: Quit this service" },
        // Create a list of choices
        stdInHandlerState: new StringBuilder(),
        mesg: new StringBuilder());
      FinishedWithStdInAction = () => EnableListeningToStdInAsync();
      #endregion

    }
    #endregion

    <#+} // End of feature control block. #>
