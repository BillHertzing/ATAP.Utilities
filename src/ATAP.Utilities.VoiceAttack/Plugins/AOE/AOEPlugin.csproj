<Project Sdk="Microsoft.NET.Sdk">


  <PropertyGroup>
    <SolutionDir >$(MSBuildProjectDirectory)\..\..\..\</SolutionDir>
    <SolutionBuildToolsBaseDir Condition=" '$(SolutionBuildToolsBaseDir)' == '' ">$(SolutionDir)Build\</SolutionBuildToolsBaseDir>
    <MSBuildCommunityTasksPath Condition=" '$(MSBuildCommunityTasksPath)' == '' ">$(SolutionBuildToolsBaseDir)MSBuildTasks.*\build</MSBuildCommunityTasksPath>
  </PropertyGroup>



  <PropertyGroup>
    <OutputType>Library</OutputType>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IsPackable>true</IsPackable>
    <!-- Assembly, File, and Package Information for this assembly-->
    <!-- Build and revision are created based on date-->
    <MajorVersion>0</MajorVersion>
    <MinorVersion>1</MinorVersion>
    <PatchVersion>0</PatchVersion>
    <!-- Current Lifecycle stage for this assembly-->
    <PackageLifeCycleStage>Development</PackageLifeCycleStage>
    <!-- NuGet Package Label for the Nuget Package if the LifeCyclestage is not Production-->
    <!-- However, if the LifeCyclestage is Production, the NuGet Package Label is ignored, but MSBuild expects a non-null value  -->
    <PackageLabel>Alpha</PackageLabel>
    <Configurations>Debug;Release;ReleaseWithTrace</Configurations>
  </PropertyGroup>

  <PropertyGroup>
    <Configurations>Debug;Release;ReleaseWithTrace;</Configurations>
    <!-- When building against anything except net5.0, the c# V9 keyword 'init' throws errors-->
    <TargetFrameworks>net5.0;</TargetFrameworks>
    <RuntimeIdentifiers>win10-x64</RuntimeIdentifiers>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

    <!-- VA profiles are an extra level below src -->

  <!-- Packages necessary to run the ASP.Net Core Generic Host and web server hosts Server
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Configuration" />
    <PackageReference Include="Microsoft.Extensions.Hosting" />
    <PackageReference Include="Microsoft.Extensions.Localization" />
    <PackageReference Include="Microsoft.Extensions.Logging" />
  </ItemGroup>
  -->

    <!-- Packages to implement Serilog as logging provider -->
  <ItemGroup>
    <PackageReference Include="Serilog" />
    <PackageReference Include="Serilog.Settings.Configuration" />
    <PackageReference Include="Serilog.Enrichers.Thread" />
    <PackageReference Include="Serilog.Exceptions" />
    <PackageReference Include="Serilog.Extensions.Hosting" />
    <PackageReference Include="Serilog.Sinks.Console" />
    <PackageReference Include="Serilog.Sinks.Debug" />
    <PackageReference Include="Serilog.Sinks.File" />
    <PackageReference Include="Serilog.Sinks.Seq" />
    <PackageReference Include="SerilogAnalyzer" />
    <!--    <PackageReference Include="Serilog.AspNetCore" /> -->
  </ItemGroup>

  <!-- Packages to add Serilog and SEQ as Microsoft.Extensions.Logging providers -->
  <ItemGroup>
    <PackageReference Include="Serilog.Extensions.Logging" />
    <PackageReference Include="Seq.Extensions.Logging" />
  </ItemGroup>

  <ItemGroup>
    <None Update="AOEPlugin.Development.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="AOEPluginSettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>




</Project>
