using System;
using System.Collections.Generic;
using ATAP.Utilities.Philote;

namespace ATAP.Utilities.GenerateProgram {

  public class GProjectUnit : IGProjectUnit {
    public GProjectUnit(string gName, string gRelativePath = default, string gFileSuffix = default,
    Dictionary<IPhilote<IGPropertyGroupInProjectUnit>, IGPropertyGroupInProjectUnit> gPropertyGroupInProjectUnits = default,
    Dictionary<IPhilote<IGItemGroupInProjectUnit>, IGItemGroupInProjectUnit> gItemGroupInProjectUnits = default,
    Dictionary<IPhilote<IGResourceUnit>, IGResourceUnit> gResourceUnits = default,
    IGPatternReplacement gPatternReplacement = default,
    IGComment gComment = default

    ) {
      GName = gName ?? throw new ArgumentNullException(nameof(gName));
      GRelativePath = gRelativePath == default ? "" : gRelativePath;
      GFileSuffix = gFileSuffix == default ? ".csproj" : gFileSuffix;
      GPropertyGroupInProjectUnits = gPropertyGroupInProjectUnits == default ? new Dictionary<Philote<GPropertyGroupInProjectUnit>, GPropertyGroupInProjectUnit>() : gPropertyGroupInProjectUnits;
      GItemGroupInProjectUnits = gItemGroupInProjectUnits == default ? new Dictionary<Philote<GItemGroupInProjectUnit>, GItemGroupInProjectUnit>() : gItemGroupInProjectUnits;
      GResourceUnits = gResourceUnits == default ? new Dictionary<Philote<GResourceUnit>, GResourceUnit>() : gResourceUnits;
      GPatternReplacement = gPatternReplacement == default ? new GPatternReplacement() : gPatternReplacement;
      GComment = gComment == default ? new GComment() : gComment;
      Philote = new Philote<GProjectUnit>();
    }

    public string GName { get; init; }
    public string GRelativePath { get; init; }
    public string GFileSuffix { get; init; }
    public Dictionary<IPhilote<IGResourceUnit>, IGResourceUnit> GResourceUnits { get; init; }
    public Dictionary<IPhilote<IGPropertyGroupInProjectUnit>, IGPropertyGroupInProjectUnit> GPropertyGroupInProjectUnits { get; init; }
    public Dictionary<IPhilote<IGItemGroupInProjectUnit>, IGItemGroupInProjectUnit> GItemGroupInProjectUnits { get; init; }
    public IGPatternReplacement GPatternReplacement { get; init; }
    public IGComment GComment { get; init; }
    public IPhilote<IGProjectUnit> Philote { get; init; }
    public static string Header { get; } = "<!--" + StringConstants.AutoGeneratedHeaderCommentTextStringDefault + " -->";
  }
}

